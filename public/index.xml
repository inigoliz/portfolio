<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Iñigo&#39;s Portfolio</title>
    <link>https://inigoliz.dev/</link>
    <description>Recent content on Iñigo&#39;s Portfolio</description>
    <generator>Hugo -- 0.140.2</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Mar 2025 23:26:01 +0100</lastBuildDate>
    <atom:link href="https://inigoliz.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Object Detection on FPV Drone</title>
      <link>https://inigoliz.dev/posts/object-detection-fpv-drone/</link>
      <pubDate>Wed, 12 Mar 2025 23:26:01 +0100</pubDate>
      <guid>https://inigoliz.dev/posts/object-detection-fpv-drone/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This project started with a simple question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How difficult would it be to get machine learning running locally on my FPV drone?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/object-detection-fpv-drone/drone_table.gif#center&#34; alt=&#34;(Gif showing EEPROM reading)&#34;
    
     style=&#34;width: 100%; max-width: 700px;&#34;
    /&gt;&lt;/p&gt;
&lt;p&gt;After several iterations, I managed to run object detection on the video feed captured by my drone with a latency high enough not to introduce lag in the flying experience.&lt;/p&gt;
&lt;p&gt;At this point I must take a pause. I know what you&amp;rsquo;re wondering: are you building &lt;em&gt;smart killer drones&lt;/em&gt;? Definitely not! The models that I&amp;rsquo;m using or I could use with my hardware are &lt;strong&gt;too simple and faulty&lt;/strong&gt; to be of any practical use! These weapons exist, but still remain far away from what you can build at your home.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Teenygrad Study Notes</title>
      <link>https://inigoliz.dev/posts/teenygrad-learning-notes/</link>
      <pubDate>Thu, 26 Dec 2024 03:51:29 +0100</pubDate>
      <guid>https://inigoliz.dev/posts/teenygrad-learning-notes/</guid>
      <description>&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/teenygrad-learning-notes/cover.png&#34; alt=&#34;(Cover image)&#34;
    
     style=&#34;width: 100%; max-width: 700px;&#34;
    /&gt;&lt;/p&gt;
&lt;p&gt;What happens when you reduce a ML framework all the way to its bare bones? - You get &lt;a href=&#34;https://github.com/tinygrad/teenygrad&#34;&gt;&lt;strong&gt;teenygrad&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post, I want to dive into the source code of teenygrad to illustrate the software architecture behind some important concepts of ML-engines like backpropagation and computational graphs.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s true that you can go read the code directly (it&amp;rsquo;s not that difficult) but&amp;hellip; why not take a guided tour first? If you enjoyed Karpathy&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=VMj-3S1tku0&#34;&gt;micrograd&lt;/a&gt;, you&amp;rsquo;ll like teenygrad.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Minimalistic EEPROM programmer</title>
      <link>https://inigoliz.dev/posts/amanuensis-eeprom-interface/</link>
      <pubDate>Tue, 10 Dec 2024 14:27:41 +0100</pubDate>
      <guid>https://inigoliz.dev/posts/amanuensis-eeprom-interface/</guid>
      <description>&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/amanuensis-eeprom-interface/amanuensis_header.png#center&#34; alt=&#34;(Amanuensis Header Art)&#34;
    
     style=&#34;width: 100%; max-width: 700px;&#34;
    /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-it&#34;&gt;What is it?&lt;/h2&gt;
&lt;p&gt;A command-line tool to interact with a 28c256 256KB EEPROM, which is the one used in
&lt;a href=&#34;https://www.youtube.com/watch?v=LnzuMJLZRdU&amp;amp;list=PLowKtXNTBypFbtuVMUVXNR0z1mu7dp7eH&amp;amp;index=1&#34;&gt;Ben Eater&amp;rsquo;s 6502 pc&lt;/a&gt;.
Allows reading contents from the EEPROM and writing data to it.&lt;/p&gt;
&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/amanuensis-eeprom-interface/read_range_presentation.png#center&#34; alt=&#34;(Reading EEPROM preview)&#34;
    
     style=&#34;width: 100%; max-width: 700px;&#34;
    /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The command used to drive the EEPROM is&lt;code&gt;nuensis&lt;/code&gt;. It is named after the Amanuensis monks, which provided services as scribes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Check the project on &lt;a href=&#34;https://github.com/ignigoliz/amanuensis&#34;&gt;Github&lt;/a&gt; to make your own!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automatic Cat Feeder</title>
      <link>https://inigoliz.dev/posts/janus-cat-feeder/</link>
      <pubDate>Wed, 27 Nov 2024 12:36:05 +0100</pubDate>
      <guid>https://inigoliz.dev/posts/janus-cat-feeder/</guid>
      <description>&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/janus-cat-feeder/janus_header.png#center&#34; alt=&#34;(Janus header art)&#34;
    
     style=&#34;width: 100%; max-width: 500px;&#34;
    /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-it&#34;&gt;What is it?&lt;/h2&gt;
&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/janus-cat-feeder/IMG_9965_2.gif#center&#34; alt=&#34;(Lilo getting her food)&#34;
    
     style=&#34;width: 100%; max-width: 350px;&#34;
    /&gt;
A camera-controlled cat feeder that only exposes the food when a certain pet is around.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;I have two cats: one is black and slim and the other is white and chubby. The black one is called Lilo. The white one, Coco.&lt;/p&gt;
&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/janus-cat-feeder/IMG_9967.jpg#center&#34; alt=&#34;(Lilo and Coco)&#34;
    
     style=&#34;width: 100%; max-width: 350px;&#34;
    /&gt;&lt;/p&gt;
&lt;p&gt;The problem is that Coco eats Lilo&amp;rsquo;s wet food. I&amp;rsquo;ve built an automatic pet feeder that only exposes the food when Lilo approaches, thus stopping Coco from eating it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Winter of Output</title>
      <link>https://inigoliz.dev/posts/winter-of-output/</link>
      <pubDate>Mon, 18 Nov 2024 19:07:28 +0100</pubDate>
      <guid>https://inigoliz.dev/posts/winter-of-output/</guid>
      <description>&lt;p&gt;&lt;img
    src=&#34;https://inigoliz.dev/images/DSCF1490.jpg#center&#34; alt=&#34;(Scandinavian winter landscape)&#34;
    
    
    /&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s November 18th. Winter is already making an appearance here in Scandinavia. My hands start to get cold when I bike home, the few leaves that remain in the trees are falling, and the darkness arrives before the workday is over. Recently, I quit my job because it didn&amp;rsquo;t fullfil me and, for once, I&amp;rsquo;ve decided not to rush-into-the-next-thing. I&amp;rsquo;ve decided that, for the next 4 months, I will encourage my own creativity and see where it brings me. I&amp;rsquo;ll try to &lt;em&gt;build my next thing&lt;/em&gt;. I&amp;rsquo;ve called this period&amp;hellip; the &lt;em&gt;Winter of Output&lt;/em&gt; (inspired by Andy Kong&amp;rsquo;s &lt;a href=&#34;https://andykong.org/projects/yearofoutput/&#34;&gt;Year of Output&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
